% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lasso_lagrange.R
\name{orSHC_lagrange_gapstat}
\alias{orSHC_lagrange_gapstat}
\title{orSHC_lagrange_gapstat}
\usage{
orSHC_lagrange_gapstat(
  x,
  lambdas = NULL,
  standardize.arrays = FALSE,
  dissimilarity = c("squared.distance", "absolute.value"),
  method = c("average", "complete", "single", "centroid", "ward.D", "ward.D2",
    "mcquitty", "median"),
  loop_k = 20,
  loop_lambda = 3,
  loop_threshold = 0.5,
  max.iter = 100,
  iseed = NULL,
  silent = FALSE,
  warm_start = TRUE,
  return_all_results = FALSE,
  nperms = 10,
  sel_rule = c("max", "1se.rule")
)
}
\arguments{
\item{x}{data matrix. Rows are samples, while columns are features.}

\item{lambdas}{a sequence of lasso variance parameters. If Null, lambdas is assigned as \code{seq(1, max(nrow(x), ncol(x)), length = 100)}. The default is NULL.}

\item{standardize.arrays}{should the data matrix be standardized? The default is FALSE.}

\item{dissimilarity}{type of dissimilarity metric. This should be either "squared.distance" or "absolute.value". The default is "squared.distance".}

\item{method}{the agglomeration method to be used. This should be (an unambiguous abbreviation of) one of "ward.D", "ward.D2", "single", "complete", "average" (= UPGMA), "mcquitty" (= WPGMA), "median" (= WPGMC) or "centroid" (= UPGMC). The default is "average".}

\item{loop_k}{size of k-nearest neighbors defining local contexts in local outlier probability (LoOP) calculation. The default is 20.}

\item{loop_lambda}{scaling parameter in local outlier probability (LoOP) calculation. The default is 3.}

\item{loop_threshold}{threshold of LoOP above which LoOP values imply outliers. The default is 0.5.}

\item{max.iter}{maximum number of iterations. The default is 500.}

\item{iseed}{seed of random numbers used for initializing w. If Null, all elements of w are initialized as a fixed value of 1.0/sqrt(p). Otherwise, the initial w elements are uniformly distributed in \code{[0, 2.0/sqrt(p)]}. The default is NULL.}

\item{silent}{should progress messages be suppressed? The default is FALSE.}

\item{warm_start}{“warm start” strategy to accelerate convergence for a series of hyperparameters. Since solutions for similar hyperparameters are close, w is initialized as a solution for a nearby hyperparameter so that its solution can be found relatively quickly. The default is TRUE.}

\item{return_all_results}{should orSHC_lagrange results for all hyperparameters be returned? If False, only the result for the best hyperparameter is returned. The default is FALSE.}

\item{nperms}{number of permutations. The default is 10.}

\item{sel_rule}{rule for choosing the best hyperparameter. This should be either "max" (maximum gap statistic) or "1se.rule" (having a low complexity but within 1 standard error of the maximum gap statistic). The default is "max".}
}
\value{
\item{lassotype}{abbreviated name of lasso type.}
\item{lassotype_full}{full name of lasso type.}
\item{tots}{the strength of the clustering using real data (i.e., maximized objective function values).}
\item{permtots}{the strength of the clustering using permuted data (i.e., maximized objective function values).}
\item{w_l0norm}{L0 norm of w.}
\item{gaps_mean}{mean values of gap statistic.}
\item{gaps_se}{standard errors of gap statistic.}
\item{hyps}{hyperparameters (i.e., lambdas).}
\item{best_hyp}{best hyperparameter (i.e., best lambda).}
\item{best_index}{index of best hyperparameter (i.e., best lambda).}
\item{result}{orSHC_lagrange result. If return_all_results is TRUE, results of all hyperparameters are stored as a list, in which each element is a result of orSHC_lagrange; otherwise, it only contains the result corresponding to the best hyperparameter.}
}
\description{
This function computes gap statistic profile for a series of hyperparameters (lambda's) by running orSHC_lagrange on both original data and permuted data.
}
\details{
For a hyperparameter, the gap statistic measures the strength of the clustering based on real data with respect to the one based on randomly permuted data that are supposed to have no cluster.
This function runs orSHC_lagrange for every hyperparameter, calculates gap statistic, and get the best hyperparamter that corresponds to the maximum gap statistic.
}
\examples{
source(system.file("scripts", "gen_sim_data.R", package = "recombine"))
d <- gen_sim_data(out_pct = 0.1, iseed = 1)
out <- orSHC_lagrange_gapstat(d$x,
                              lambdas = seq(0, 0.5*max(nrow(d$x), ncol(d$x)), length = 20),
                              nperms = 3)
plot(out)

}
